Passport Tutorial

This is a node express application which demonstates the use of the passport package. Passport is Express-compatible authentication for middleware for node.js. Passport's sole purpose is authenticate requests, which it does through an extensive set of plug-ins know as strategies. Passport does not mount routes of assume any particular database schema, which maxes the flexibility and allows application-level decisions to be made by the developer. The API is somewhat simple: you provide Passport with a request to authenticate and then Passport provides hooks for controlling what occurs when authentication succeeds or fails.

Explanation of files

Package.json - this file hold the information of the application and what modules this application uses. It also contains the scripts which are necessary for starting the application. The application starts by running the command "npm state" provided that the database connection setup is done.

Server.js - this is the main file of the application. It runs first when we start the application. It imports certain modules and also syncs up with the database and starts the application by listening on port 8080 or the port user set un envirmonment variables. It also registers all the URL routes of the application to move to different pages.

Public directory - this directory contains all the static data such as javascrips and stylesheets for HTML pages. It contains three pages for login, sign up for signing up with a new account and then members which is bsically the dashboard the usere sees after logging in.

Config.json - this is the json which contains the creddentuals for setting up the database connection for different environments.

User.js - this file uses a Sequelize to manage and handle the query and operations of the database. Sequelize creates a model which basically is a database table. In this fule bcrypt.js is also used which is a package that helps encrypt the password so that the password can only be decrypted by bcrypt.js.

IsAuthenticated.js - this fule is for authentication. It secures the application by checking wether the user is logged in or not. If the user is loggen in then only the ser can access different routes/pages

Index.js - this file creates the database connection by reading the config.json file and then taking the credentials based on the environment provided. it uses sequelize for setting up the connection and also registers the user model.

Html-routes.hs - this file contails the URL routes for different pages. It handles the routin gof the application. If you type"//login" in the url then the application will show you the login page.

Api-routes - this fule contains the API routes. By API routes another application can access the data or use the functionality we wish to feature.

Instructions for changes

We can add the functionality of login using google, twitter, gacebook and other services provided by the passport package. We could add more functionality on the dashboard. This can be turned into a big application and automatically the API needs to expand so that the other application can use our functionalities.